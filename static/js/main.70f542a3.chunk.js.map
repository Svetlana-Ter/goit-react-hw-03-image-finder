{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Error/Error.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","services/imageApi.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","imageName","handleChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","info","className","this","type","onChange","placeholder","Component","Error","message","ImageGalleryItem","image","webformatURL","tags","largeImageURL","src","alt","data-set","Loader","color","height","width","timeout","api","fetchImages","name","page","fetch","then","resp","ok","json","Promise","reject","ImageInfo","images","error","status","prevProps","currentName","imageAPI","hits","handleButton","catch","window","scrollTo","top","document","documentElement","scrollHeight","behavior","onClick","openModal","map","id","Button","loadMoreImages","defaultProps","modalRoot","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","addEventListener","removeEventListener","createPortal","children","App","loadMore","showModal","bigImageUrl","handleFormSubmit","handleLoadMore","closeModal","prevState","dataset","set","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.70f542a3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  state = {\n    imageName: '',\n  };\n\n  handleChange = event => {\n    this.setState({\n      imageName: event.currentTarget.value.toLowerCase(),\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.imageName.trim() === '') {\n      toast.info('Введите название для поиска');\n      return;\n    }\n    this.props.onSubmit(this.state.imageName);\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    return (\n      <header className='Searchbar'>\n        <form className='SearchForm' onSubmit={this.handleSubmit}>\n          <button type='submit' className='SearchForm-button'>\n            <span className='SearchForm-button-label'>Search</span>\n          </button>\n\n          <input\n            onChange={this.handleChange}\n            value={this.state.imageName}\n            className='SearchForm-input'\n            type='text'\n            placeholder='Search images and photos'\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nexport default function Error({ message = '' }) {\n  return <h1>{message}</h1>;\n}\n\nError.propTypes = {\n  message: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nexport default function ImageGalleryItem({\n  image: { webformatURL = '', tags = '', largeImageURL = '' },\n}) {\n  return (\n    <li className='ImageGalleryItem'>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className='ImageGalleryItem-image'\n        data-set={largeImageURL}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string,\n    tags: PropTypes.string,\n    largeImageURL: PropTypes.string,\n  }),\n};\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport LoaderSpinner from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <LoaderSpinner\n      className='Loader'\n      type='Puff'\n      color='#00BFFF'\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n  );\n}\n","function fetchImages(name, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=19220688-570d8444e3e62b8d826a97ca4&image_type=photo&orientation=horizontal&per_page=12`\n  ).then(resp => {\n    if (resp.ok) {\n      return resp.json();\n    }\n    return Promise.reject(new Error(`Нет картинок с названием ${name}`));\n  });\n}\nconst api = { fetchImages };\nexport default api;\n","import { Component } from 'react';\nimport Error from '../Error/Error';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Loader from '../Loader/Loader';\nimport imageAPI from '../../services/imageApi';\n\nexport default class ImageInfo extends Component {\n  static defaultProps = {\n    imageName: '',\n    page: 1,\n  };\n  static propTypes = {\n    openModal: PropTypes.func,\n    handleButton: PropTypes.func,\n    imageName: PropTypes.string,\n    page: PropTypes.number,\n    key: PropTypes.string,\n  };\n\n  state = {\n    images: null,\n    error: null,\n    status: 'idle',\n  };\n  componentDidUpdate(prevProps) {\n    const currentName = this.props.imageName;\n    let page = this.props.page;\n\n    if (currentName !== prevProps.imageName) {\n      this.setState({ status: 'pending' });\n      page = 1;\n      imageAPI\n        .fetchImages(currentName, page)\n        .then(images => {\n          this.setState({ images: images.hits, status: 'resolved' });\n          this.props.handleButton(images.hits);\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    } else if (page !== prevProps.page) {\n      this.setState({ status: 'pending' });\n      imageAPI\n        .fetchImages(currentName, page)\n        .then(images => {\n          this.setState({\n            images: [...this.state.images, ...images.hits],\n            status: 'resolved',\n          });\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  }\n\n  render() {\n    const { images, error, status } = this.state;\n    if (status === 'idle') {\n      return (\n        <div className='ImageGallery-initialText'>\n          Введите название для поиска картинки\n        </div>\n      );\n    }\n    if (status === 'pending') {\n      return <Loader />;\n    }\n\n    if (status === 'rejected') {\n      return <Error message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <ul className='ImageGallery' onClick={this.props.openModal}>\n          {images.map(image => (\n            <ImageGalleryItem image={image} key={image.id} />\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n","import PropTypes from 'prop-types';\nexport default function Button({ loadMoreImages }) {\n  return (\n    <div className='Button-wrap'>\n      <button type='button' className='Button' onClick={loadMoreImages}>\n        Load more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  loadMoreImages: PropTypes.func,\n};\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return createPortal(\n      <div className='Overlay' onClick={this.handleBackdropClick}>\n        <div className='Modal'>{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n","import './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nexport default class App extends Component {\n  state = {\n    imageName: '',\n    loadMore: false,\n    page: 1,\n    showModal: false,\n    bigImageUrl: '',\n  };\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n  handleLoadMore = images => {\n    if (images) {\n      this.setState({ loadMore: true });\n    }\n  };\n\n  closeModal = () => {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  loadMoreImages = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n  openModal = event => {\n    this.setState({ bigImageUrl: event.target.dataset.set, showModal: true });\n  };\n\n  render() {\n    const { imageName, page, loadMore, showModal, bigImageUrl } = this.state;\n    return (\n      <>\n        <ToastContainer\n          position='top-right'\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery\n          handleButton={this.handleLoadMore}\n          imageName={imageName}\n          page={page}\n          openModal={this.openModal}\n        />\n        {loadMore && <Button loadMoreImages={this.loadMoreImages} />}\n        {showModal && (\n          <Modal onClose={this.closeModal}>\n            <img src={bigImageUrl} alt={imageName} />\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}